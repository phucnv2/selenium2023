- Thread.sleep (thuộc Java): hạn chế dùng sau khi biết Waits trong Selenium.
	+ Áp dụng cho việc chờ đợi giữa dòng code trên và dưới

- Implicit Wait (thuộc Selenium): áp dụng cho việc chờ đợi ngầm định 1 element khi có cú pháp driver.findElement
	+ Áp dụng cho tất cả các test cases mà liên quan đến setting implicitwait
	+ Nếu mà có lỗi thì tất cả đều phải chờ đợi hết thời gian chung (10s, 20s,..)

	100 tcs lỗi thì mất 2000s => 30 phút hơn (thời gian vô nghĩa)

	SỬ DỤNG: driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

- Explicit Wait (thuộc Selenium): áp dụng cho việc chờ đợi có điều kiện cụ thể mà mình chỉ định
	+ Áp dụng cho cụ thể từng action mà mình chỉ định đối với 1 element (driver.findElement)
	+ Nếu mà nó có lỗi thì lỗi đó riêng của từng action, không giống nhau
	VD: test1 áp dụng 10s, test2 áp dụng 20s,...

	SỬ DỤNG: WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(5));

	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h3[contains(text(),'Website Testing')]")));

	driver.findElement(By.xpath("//h3[contains(text(),'Website Testing')]")).click();

- Phân biệt đối tượng By và WebElement
	+ Đối tượng By nó sẽ thiết lập cấu trúc tìm kiếm, nhưng chưa thực hiện tìm kiếm (chưa tìm kiếm)
	+ Đối tượng WebElement sẽ tìm kiếm với đúng cú pháp thiết lập luôn (Tìm kiếm rồi)
